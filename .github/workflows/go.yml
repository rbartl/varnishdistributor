name: Build and Release

on:
  push:
    branches: [ master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21

    - name: Install dependencies
      run: |
        go mod tidy
        go mod download

    - name: Build
      run: go build -v ./vdistribute.go

    - name: Test
      run: go test -v ./...

  build-binary:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21

    - name: Install dependencies
      run: |
        go mod tidy
        go mod download

    - name: Build Linux Binary
      run: |
        GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o varnishdistributor-linux-amd64 -ldflags="-s -w" ./vdistribute.go

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: varnishdistributor-linux-amd64
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-docker:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      run: |
        echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        echo "sha=${GITHUB_SHA}" >> $GITHUB_OUTPUT
        echo "image_name=ghcr.io/${{ github.repository_owner }}/varnishdistributor" >> $GITHUB_OUTPUT

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ steps.meta.outputs.image_name }}:${{ steps.meta.outputs.tag }}
          ${{ steps.meta.outputs.image_name }}:latest
        labels: |
          org.opencontainers.image.title=varnishdistributor
          org.opencontainers.image.description=Varnish Distributor - HTTP request distributor to multiple varnish endpoints
          org.opencontainers.image.vendor=${{ github.repository_owner }}
          org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
          org.opencontainers.image.revision=${{ steps.meta.outputs.sha }}
          org.opencontainers.image.version=${{ steps.meta.outputs.tag }}

    - name: Output image info
      run: |
        echo "Successfully built and pushed Docker image:"
        echo "  - ${{ steps.meta.outputs.image_name }}:${{ steps.meta.outputs.tag }}"
        echo "  - ${{ steps.meta.outputs.image_name }}:latest"
